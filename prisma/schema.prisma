// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int         @id @default(autoincrement())
  email         String      @unique @db.VarChar(255)
  name          String      @db.VarChar(255)
  username      String      @db.VarChar(255)
  phone         String      @db.VarChar(255)
  region        String?     @db.VarChar(255)
  password      String      @db.VarChar(255)
  isAdmin       Boolean     @db.Boolean @default(false)
  posts         Post[]   
  likes         PostLikes[]
  createdAt     DateTime    @default(now())
  UpdatedAt     DateTime    @updatedAt
}

model Thread {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(255)
  key        String   @unique @db.VarChar(255)
  posts      Post[]
}

model Post {
  id         Int      @id @default(autoincrement())
  content    String   @db.Text
  author     User     @relation(fields: [authorId], references: [id])
  authorId   Int      
  replyTo    Post?    @relation("ReplyToRelation", fields: [replyToId], references: [id])
  replyToId  Int?
  repliedBy  Post[]   @relation("ReplyToRelation")
  replyCount Int      @default(0)
  likes      PostLikes[]
  likesCount Int      @default(0)
  thread     Thread   @relation(fields: [threadId], references: [id])
  threadId   Int
  createtAt  DateTime @default(now())
  UpdatedAt  DateTime @updatedAt
}

model PostLikes {
  id         Int      
  post       Post     @relation(fields: [postId], references: [id])
  postId     Int      
  user       User     @relation(fields: [userId], references: [id])
  userId     Int      
  createdAt  DateTime @default(now())
  UpdatedAt  DateTime @updatedAt

  @@id([postId, userId])
}

model News {
  id           Int      @id @default(autoincrement())
  title        String   @db.VarChar(255)
  content      String   @db.Text
  author       String   @db.VarChar(255)
  createdAt    DateTime @default(now())
  UpdatedAt    DateTime @updatedAt
}

model Disease {
  id           Int      @id @default(autoincrement())
  name         String   @db.VarChar(255)
  description  String   @db.Text
  createdAt    DateTime @default(now())
  UpdatedAt    DateTime @updatedAt
}

model Feedback {
  id           Int      @id @default(autoincrement())
  name         String   @db.VarChar(255)
  email        String   @db.VarChar(255)
  feedback     String   @db.Text
  createdAt    DateTime @default(now())
  UpdatedAt    DateTime @updatedAt
}